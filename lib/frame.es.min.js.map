{"version":3,"file":"frame.es.min.js","sources":["../src/mount.js","../src/route.js","../src/element.js","../src/request.js","../src/range.js","../src/PromiseSwitcher.js","../src/index.js"],"sourcesContent":["function select(arg) {\r\n    if(arg instanceof Element)\r\n        return arg;\r\n    else\r\n        return document.querySelector(arg);\r\n}\r\n\r\n/* Traverse a node tree and converts everything to html elements\r\n * @param {HTMLElement,Array,Promise,function,string,Component} node Tree of elements\r\n * @param {function} callback Call on each resolved element for the caller to make desired operations on element\r\n * @returns undefined if all elements processed synchronously, instanceof Promise resolved when all elements are ready if async\r\n */\r\nfunction traverse(node, callback) {\r\n    // use directly html element\r\n    if(node instanceof Node) {\r\n        callback(node, null);\r\n    }\r\n    // list of elements\r\n    else if(Array.isArray(node)) {\r\n        let promises;\r\n        for(let i = 0; i < node.length; i++) {\r\n            const currentNode = node[i];\r\n            // at least one promise in the list, traversal will be async\r\n            if(currentNode instanceof Promise) {\r\n                if(!promises)\r\n                    promises = [currentNode];\r\n                else\r\n                    promises.push(currentNode);\r\n                \r\n                currentNode.then(result => {\r\n                    traverse(result, (element, before) => {\r\n                        node[i] = element;\r\n                        // find were our element should be located\r\n                        for(let j = i + 1; j < node.length; j++) {\r\n                            if(node[j] && node[j] instanceof Node) {\r\n                                before = node[j];\r\n                                break;\r\n                            }\r\n                        }\r\n                        callback(element, before);\r\n                    });\r\n                });\r\n            }\r\n            // synchronous case\r\n            else {\r\n                traverse(currentNode, callback);\r\n            }\r\n        }\r\n        // wait for promises to complete\r\n        if(promises) {\r\n            return Promise.all(promises);\r\n        }\r\n    }\r\n    // promise : resolve\r\n    else if(node instanceof Promise) {\r\n        return node.then(node => traverse(node, callback));\r\n    }\r\n    // nothing : skip\r\n    else if(node === null || node === undefined) {\r\n    }\r\n    else {\r\n        const type = typeof(node);\r\n\r\n        // component\r\n        if(type === 'object' && node.__proto__.constructor.name !== 'Object' && 'el' in node && node.el instanceof Node) {\r\n            callback(node.el, null);\r\n        }\r\n        // dynamic function\r\n        else if(type === 'function') {\r\n            return traverse(node(), callback);\r\n        }\r\n        // consider everything else as text\r\n        else {\r\n            callback(document.createTextNode(node), null);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Clears all contents of element\r\n * @param {HTMLElement} element\r\n */\r\nmount.clear = function(selector) {\r\n    const element = select(selector);\r\n    if(element.childNodes.length > 0)\r\n        element.innerHTML = ''; // quick clear\r\n}\r\n\r\n/**\r\n * Mount children elements into parent\r\n * Replaces all previous content inside parent\r\n * @param {HTMLElement} parent \r\n * @param {HTMLElement,Array,Promise,function,string,Component} children\r\n */\r\nfunction mount(parentSelector, children) {\r\n    const parent = select(parentSelector);\r\n    mount.clear(parent);\r\n    return mount.append(parent, children);\r\n}\r\n\r\n/**\r\n * Mount children elements before all existing elements of parent\r\n * @param {HTMLElement} parent \r\n * @param {HTMLElement,Array,Promise,function,string,Component} children\r\n */\r\nmount.prepend = function(parentSelector, children) {\r\n    const parent = select(parentSelector);\r\n    return mount.before(parent, children, parent.firstChild);\r\n};\r\n\r\n/**\r\n * Mount children elements after all existing elements of parent\r\n * @param {HTMLElement} parent \r\n * @param {HTMLElement,Array,Promise,function,string,Component} children\r\n */\r\nmount.append = function(parentSelector, children) {\r\n    const parent = select(parentSelector);\r\n    return mount.after(parent, children, null);\r\n};\r\n\r\n/**\r\n * Mount children elements before reference element of parent\r\n * @param {HTMLElement} parent \r\n * @param {HTMLElement,Array,Promise,function,string,Component} children\r\n * @param {HTMLElement} reference \r\n */\r\nmount.before = function(parentSelector, children, reference) {\r\n    const parent = select(parentSelector);\r\n    return traverse(children, (element, reference2) => {\r\n        parent.insertBefore(element, reference2 ? reference2 : reference);\r\n    });\r\n};\r\n\r\n/**\r\n * Mount children elements after reference element of parent\r\n * @param {HTMLElement} parent \r\n * @param {HTMLElement,Array,Promise,function,string,Component} children\r\n * @param {HTMLElement} reference \r\n */\r\nmount.after = function(parentSelector, children, reference) {\r\n    const parent = select(parentSelector);\r\n    const after = reference ? reference.nextSibling : null;\r\n    return traverse(children, (element, after2) => {\r\n        parent.insertBefore(element, after2 ? after2 : after);\r\n    });\r\n};\r\n\r\nmount.replace = function(children, reference) {\r\n    if(children) {\r\n        return traverse(children, (element) => {\r\n            reference.parentNode.replaceChild(element, reference)\r\n        });\r\n    }\r\n    else {\r\n        mount.clear(reference.parentNode);\r\n    }\r\n};\r\n\r\nfunction unmount(children) {\r\n    for(const child of Array.isArray(children) ? children : [children])\r\n        child.remove();\r\n}\r\n\r\nexport {mount, unmount};\r\n","import {mount} from './mount';\r\n\r\n/**\r\n * Initializes the frame router\r\n * \r\n * @param {HTMLElement} root root container element\r\n * @param {Object} table map of each route. key is pattern, value is content\r\n * @param {*} base base url at which the page is loaded. '' for website at root\r\n */\r\nexport function route(root, table, base) {\r\n    for(const pattern in table) {\r\n        route.add(pattern, table[pattern]);\r\n    }\r\n    route.root = root;\r\n    if(typeof(base) === 'string')\r\n        route.base = base;\r\n\r\n    window.addEventListener('popstate', ({state}) => {\r\n        if(state) {\r\n            route.set(state.path, state.params);\r\n        }\r\n        else {\r\n            route.set(document.location.pathname + document.location.hash);\r\n        }\r\n    });\r\n    route.set(document.location.pathname + document.location.hash);\r\n\r\n    return route;\r\n}\r\n\r\nroute.base = document.location.pathname + '#';\r\nroute.table = [];\r\n\r\n/**\r\n * Compiles a regex from a route pattern\r\n * \r\n * @param {*} pattern route pattern\r\n * @returns {RegExp} regexp satisfiying the pattern\r\n */\r\nfunction routeToRegex(pattern) {\r\n    const regex = pattern.replace(/\\//g, '\\\\/').replace(/:(\\w+)/g, '(?<$1>\\\\w+)');\r\n    return new RegExp(`^${regex}$`);;\r\n}\r\n\r\n/**\r\n * Adds a route to the route table\r\n * \r\n * @param {string} pattern\r\n * @param {function,HTMLElement,FrameElement,Object} content Content to display. Can have a controller function in the middle.\r\n */\r\nroute.add = function(pattern, content) {\r\n    route.table.push({\r\n        pattern,\r\n        regex: routeToRegex(pattern),\r\n        content,\r\n    });\r\n};\r\n\r\n/**\r\n * Load route without changing the browser URL\r\n * \r\n * @param {string} path route path\r\n */\r\nroute.set = function(path) {\r\n    let [matchingRoute, params] = route.get(path);\r\n    if(matchingRoute) {\r\n        // give params if matching route is a function\r\n        let content = matchingRoute instanceof Function ? matchingRoute(params) : matchingRoute;\r\n        mount(route.root, content);\r\n    }\r\n    else {\r\n        throw new Error('No route found ' + path);\r\n    }\r\n};\r\n\r\n/**\r\n * Load route and change browser URL\r\n * \r\n * @param {string} path route path\r\n */\r\nroute.go = function(path) {\r\n    route.set(path);\r\n    history.pushState({\r\n        path,\r\n    }, 'Title', route.base + path);\r\n};\r\n\r\n/**\r\n * Find a route that matches the given path\r\n * \r\n * @param  {string} path route path\r\n * @returns {[content, params]} The route content and params extracted from the path if any\r\n */\r\nroute.get = function(path) {\r\n    // manage default route\r\n    if(route.base.substr(-1) === '#' && path + '#' === route.base) {\r\n        path = '/';\r\n    }\r\n    // remove base from path\r\n    if(path.startsWith(route.base)) {\r\n        path = path.substring(route.base.length);\r\n    }\r\n\r\n    // find route that matches path\r\n    for(const r of route.table) {\r\n        const m = r.regex.exec(path);\r\n        if(m) {\r\n            return [r.content, m.groups];\r\n        }\r\n    }\r\n}\r\n","import {mount} from './mount';\r\nimport {route} from './route';\r\n\r\nexport function explodeTagIdCls(tagIdCls) {\r\n    const [, tag, , id, clss] = /^(\\w*)(#([\\w-]+)|)((\\.[\\w-]+)*)$/g.exec(tagIdCls || '');\r\n    const cls = clss.split('.').slice(1);\r\n    return [tag.length > 0 ? tag : 'div', id && id.length > 0 ? id : null, cls];\r\n};\r\n\r\nexport function element(ns, tagIdCls, arg2, arg3) {\r\n    const [tag, id, cls] = explodeTagIdCls(tagIdCls);\r\n    let attrs, content;\r\n\r\n    // arg2: element attributes, arg3: content\r\n    if(typeof(arg2) === 'object' && arg2.__proto__.constructor.name === 'Object') {\r\n        attrs = arg2;\r\n        content = arg3;\r\n    }\r\n    else {\r\n        content = arg2;\r\n    }\r\n\r\n    const el = ns ? document.createElementNS(ns, tag) : document.createElement(tag);\r\n    if(id) {\r\n        el.id = id;\r\n    }\r\n\r\n    if(cls.length > 0) {\r\n        el.className = cls.join(' ');\r\n    }\r\n\r\n    // route links\r\n    if(route.table && tag === 'a' && !('click' in attrs) && ('href' in attrs)) {\r\n        if(route.get(attrs.href)) {\r\n            attrs.click = (e) => {\r\n                route.go(attrs.href);\r\n                e.preventDefault();\r\n            };\r\n        }\r\n    }\r\n\r\n    if(attrs) {\r\n        for(const [key, value] of Object.entries(attrs)) {\r\n            if(typeof(value) === 'function') {\r\n                el.addEventListener(key, value);\r\n                if(key === 'click' && tag === 'a' && !('href' in attrs)) {\r\n                    el.setAttribute('href', 'javascript:;');\r\n                }\r\n            }\r\n            else {\r\n                el.setAttribute(key, value);\r\n            }\r\n        }\r\n    }\r\n    mount(el, content);\r\n\r\n    return el;\r\n};\r\n","const request = {};\r\n\r\nfunction json(url, args) {\r\n    return fetch(url, args).then(response => response.json());\r\n}\r\n\r\njson.get = function(originalUrl, query = {}) {\r\n    const url = new URL(originalUrl, document.location.href);\r\n    const sp = new URLSearchParams(originalUrl.search);\r\n    for(const [key, value] of Object.entries(query)) {\r\n        if(Array.isArray(value)) {\r\n            for(const v of value) {\r\n                sp.append(key, v);\r\n            }\r\n        }\r\n        else {\r\n            sp.append(key, value);\r\n        }\r\n    }\r\n    url.search = sp.toString();\r\n    return json(url.toString(), {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n    });\r\n};\r\n\r\njson.post = function(url, data) {\r\n    return json(url, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n        headers: {'Content-Type': 'application/json'},\r\n        credentials: 'include',\r\n    });\r\n};\r\n\r\njson.put = function(url, data) {\r\n    return json(url, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(data),\r\n        headers: {'Content-Type': 'application/json'},\r\n        credentials: 'include',\r\n    });\r\n};\r\n\r\njson.delete = function(url, data) {\r\n    return json(url, {\r\n        method: 'DELETE',\r\n        body: JSON.stringify(data),\r\n        headers: {'Content-Type': 'application/json'},\r\n        credentials: 'include',\r\n    });\r\n};\r\n\r\nrequest.json = json;\r\n\r\nexport {request};\r\n","export function* irange(start, end = null, step = 1) {\r\n    if(arguments.length === 2) {\r\n        step = end || 1;\r\n        end = start;\r\n        start = 0;\r\n    }\r\n    if(start > end) {\r\n        const tmp = start;\r\n        start = end;\r\n        end = tmp;\r\n    }\r\n    for(let i = start; i <= end; i += step) {\r\n        yield i;\r\n    }\r\n}\r\n\r\nexport function range(start, end = null, step = 1) {\r\n    return new Array(...irange(start, end, step));\r\n}","import {mount} from './mount.js';\r\n\r\nexport class PromiseSwitcher {\r\n    constructor(init, promise) {\r\n        this.el = init();\r\n        promise.then(el => mount.replace(el, this.el));\r\n    }\r\n}","import {element as element} from './element.js';\r\nimport {mount, unmount} from './mount.js';\r\nimport {request} from './request.js';\r\nimport {irange, range} from './range.js';\r\nimport {route} from './route.js';\r\nimport {PromiseSwitcher} from './PromiseSwitcher.js';\r\n\r\nfunction html(arg1, arg2, arg3) {\r\n    return element(null, arg1, arg2, arg3);\r\n}\r\nfunction f(arg1, arg2, arg3) {\r\n    return element(null, arg1, arg2, arg3);\r\n}\r\n\r\nfunction svg(arg1, arg2, arg3) {\r\n    return element('http://www.w3.org/2000/svg', arg1, arg2, arg3);\r\n}\r\n\r\nexport default f;\r\nexport {\r\n    element,\r\n    f,\r\n    html,\r\n    svg,\r\n    mount,\r\n    unmount,\r\n    request,\r\n    irange,\r\n    range,\r\n    PromiseSwitcher,\r\n    route,\r\n};\r\n"],"names":["select","arg","Element","document","querySelector","traverse","node","callback","Node","Array","isArray","promises","i","length","currentNode","Promise","push","then","result","element","before","j","all","type","__proto__","constructor","name","el","createTextNode","mount","parentSelector","children","parent","clear","append","unmount","child","remove","route","root","table","base","pattern","add","window","addEventListener","state","set","path","params","location","pathname","hash","routeToRegex","regex","replace","RegExp","ns","tagIdCls","arg2","arg3","tag","id","cls","clss","exec","split","slice","explodeTagIdCls","attrs","content","createElementNS","createElement","className","join","get","href","click","e","go","preventDefault","key","value","Object","entries","setAttribute","selector","childNodes","innerHTML","prepend","firstChild","after","reference","reference2","insertBefore","nextSibling","after2","parentNode","replaceChild","matchingRoute","Error","Function","history","pushState","substr","startsWith","substring","r","m","groups","request","json","url","args","fetch","response","irange","start","end","step","arguments","tmp","range","originalUrl","query","URL","sp","URLSearchParams","search","v","toString","method","credentials","post","data","body","JSON","stringify","headers","put","delete","PromiseSwitcher","init","promise","this","html","arg1","f","svg"],"mappings":"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"}